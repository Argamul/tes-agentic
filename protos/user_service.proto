syntax = "proto3";

package user_service;

// User Service gRPC definitions
service UserService {
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
    rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
    rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse);
    rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse);
    rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
}

message User {
    string id = 1;
    string email = 2;
    string username = 3;
    string first_name = 4;
    string last_name = 5;
    repeated string roles = 6;
    repeated string permissions = 7;
    bool is_active = 8;
    int64 created_at = 9;
    int64 updated_at = 10;
    map<string, string> metadata = 11;
}

message GetUserRequest {
    string user_id = 1;
}

message GetUserResponse {
    bool success = 1;
    string message = 2;
    User user = 3;
}

message CreateUserRequest {
    string email = 1;
    string username = 2;
    string password = 3;
    string first_name = 4;
    string last_name = 5;
    repeated string roles = 6;
    map<string, string> metadata = 7;
}

message CreateUserResponse {
    bool success = 1;
    string message = 2;
    User user = 3;
}

message UpdateUserRequest {
    string user_id = 1;
    string email = 2;
    string username = 3;
    string first_name = 4;
    string last_name = 5;
    repeated string roles = 6;
    bool is_active = 7;
    map<string, string> metadata = 8;
}

message UpdateUserResponse {
    bool success = 1;
    string message = 2;
    User user = 3;
}

message DeleteUserRequest {
    string user_id = 1;
}

message DeleteUserResponse {
    bool success = 1;
    string message = 2;
}

message ListUsersRequest {
    int32 page = 1;
    int32 page_size = 2;
    string filter = 3;
    string sort_by = 4;
    bool sort_desc = 5;
}

message ListUsersResponse {
    bool success = 1;
    string message = 2;
    repeated User users = 3;
    int32 total_count = 4;
    int32 page = 5;
    int32 page_size = 6;
}

message GetUserProfileRequest {
    string user_id = 1;
}

message GetUserProfileResponse {
    bool success = 1;
    string message = 2;
    User user = 3;
    map<string, string> profile_data = 4;
}

message UpdateUserProfileRequest {
    string user_id = 1;
    map<string, string> profile_data = 2;
}

message UpdateUserProfileResponse {
    bool success = 1;
    string message = 2;
    User user = 3;
}

message AuthenticateUserRequest {
    string email = 1;
    string password = 2;
}

message AuthenticateUserResponse {
    bool success = 1;
    string message = 2;
    string access_token = 3;
    string refresh_token = 4;
    int64 expires_in = 5;
    User user = 6;
}

message ValidateTokenRequest {
    string token = 1;
}

message ValidateTokenResponse {
    bool success = 1;
    string message = 2;
    User user = 3;
    bool is_valid = 4;
    int64 expires_at = 5;
}



